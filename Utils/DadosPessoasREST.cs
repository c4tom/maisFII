// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Utils;
//
//    var dadosPessoas = DadosPessoas.FromJson(jsonString);

namespace MaisFII.Utils
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class DadosPessoasJSON
    {
        [JsonProperty("nome")]
        public string Nome { get; set; }

        [JsonProperty("idade")]
        public long Idade { get; set; }

        [JsonProperty("cpf")]
        public string Cpf { get; set; }

        [JsonProperty("rg")]
        public string Rg { get; set; }

        [JsonProperty("data_nasc")]
        public string DataNasc { get; set; }

        [JsonProperty("signo")]
        public string Signo { get; set; }

        [JsonProperty("mae")]
        public string Mae { get; set; }

        [JsonProperty("pai")]
        public string Pai { get; set; }

        [JsonProperty("email")]
        public string Email { get; set; }

        [JsonProperty("senha")]
        public string Senha { get; set; }

        [JsonProperty("cep")]
        public string Cep { get; set; }

        [JsonProperty("endereco")]
        public string Endereco { get; set; }

        [JsonProperty("numero")]
        public long Numero { get; set; }

        [JsonProperty("bairro")]
        public string Bairro { get; set; }

        [JsonProperty("cidade")]
        public string Cidade { get; set; }

        [JsonProperty("estado")]
        public string Estado { get; set; }

        [JsonProperty("telefone_fixo")]
        public string TelefoneFixo { get; set; }

        [JsonProperty("celular")]
        public string Celular { get; set; }

        [JsonProperty("altura")]
        public string Altura { get; set; }

        [JsonProperty("peso")]
        public long Peso { get; set; }

        [JsonProperty("tipo_sanguineo")]
        public string TipoSanguineo { get; set; }

        [JsonProperty("cor")]
        public string Cor { get; set; }
    }

    public partial class DadosPessoasJSON
    {
        public static DadosPessoasJSON FromJson(string json) => JsonConvert.DeserializeObject<DadosPessoasJSON>(json, Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this DadosPessoasJSON self) => JsonConvert.SerializeObject(self, Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
